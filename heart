import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.ensemble import RandomForestClassifier
from sklearn.preprocessing import LabelEncoder,StandardScaler
from sklearn.metrics import accuracy_score,confusion_matrix
df=pd.read_csv("heart.csv")
df.head()
df.drop_duplicates(inplace=True)
#Data Intergration
df.columns
subset1=df[['age','cp','chol','thalach']]
subset2=df[['exng','slp','output']]
merged_df=subset1.merge(right=subset2,how='cross')
merged_df.head()
df.columns

#Error Correcting
def remove_outliers(column):
    Q1 = column.quantile(0.25)
    Q3 = column.quantile(0.75)
    IQR = Q3 - Q1
    threshold = 1.5 * IQR
    outlier_mask = (column < Q1 - threshold) | (column > Q3 + threshold)
    return column[~outlier_mask]

# Remove outliers for each column using a loop
col_name = ['so2', 'no2', 'rspm', 'spm']
for col in col_name:
    df[col] = remove_outliers(df[col])
import seaborn as sns
import matplotlib.pyplot as plt
plt.figure(figsize=(10, 6))  # Adjust the figure size if needed

for col in col_name:
    sns.boxplot(data=df[col])
    plt.title(col)
    plt.show()

#Data Transform
df.columns
encoder=LabelEncoder()
for col in df.select_dtypes(include=['object']).columns:
    df[col]=encoder.fit_transform(df[col])
df.head()
scaler=StandardScaler()
for col in df.select_dtypes(include=['object']).columns:
    df[col]=scaler.fit_transform(df[col])
df.head()
x=df.drop(columns=['output'])
y=df['output']

#Model_Building
x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=42)
model=RandomForestClassifier()
model.fit(x_train,y_train)
y_pred=model.predict(x_test)
accuracy=accuracy_score(y_test,y_pred)
print(f"model accuracy:{accuracy:.2f}")
cm=confusion_matrix(y_test,y_pred)
sns.heatmap(cm,annot=True,fmt='d',cmap='Blues')
plt.ylabel("Actual")
plt.xlabel("predicted")
plt.title("cm")
plt.show()

